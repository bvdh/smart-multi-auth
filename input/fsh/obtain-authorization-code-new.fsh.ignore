Logical: SmartLaunchObtainAuthorizationRequestOrginal
Id: smart-launch-obtain-authorization-requrest-original
Title: "SMART launch authorization request"
Description: "The formal definition of the SMART launch (Obtain Authorization Code Request)[https://hl7.org/fhir/smart-app-launch/app-launch.html#obtain-authorization-code] as a FHIR logical model."
* response_type	1..1 string "Fixed value: code."
* client_id	    1..1 string "The client's identifier."
* redirect_uri	1..1 string "Must match one of the client's pre-registered redirect URIs."
* launch	    0..1 string "When using the EHR Launch flow, this must match the launch value received from the EHR. Omitted when using the Standalone Launch."
* scope	        1..1 string "scopes requested"
"""
Must describe the access that the app needs, including scopes like patient/*.rs, openid and fhirUser (if app needs authenticated end-user identity) and either:
* a launch value indicating that the app wants to receive already-established launch context details from the EHR
* a set of launch context requirements in the form launch/patient, which asks the EHR to establish context on your behalf.
See the section on SMART on FHIR Access Scopes for details.
"""
* state	        1..1 string "An opaque value used by the client to maintain state between the request and callback. The authorization server includes this value when redirecting the user-agent back to the client. The parameter SHALL be used for preventing cross-site request forgery or session fixation attacks. The app SHALL use an unpredictable value for the state parameter with at least 122 bits of entropy (e.g., a properly configured random uuid is suitable)."
* aud	        1..1 string "Audience requested"
"""
URL of the EHR resource server from which the app wishes to retrieve FHIR data. This parameter prevents leaking a genuine bearer token to a counterfeit resource server. (Note that in the case of an EHR launch flow, this aud value is the same as the launch's iss value.)

Note that the aud parameter is semantically equivalent to the resource parameter defined in RFC8707. SMART's aud parameter predates RFC8707 and we have decided not to rename it for reasons of backwards compatibility. We might consider renaming SMART's aud parameter in the future if implementer feedback indicates that alignment would be valuable.

For the current release, servers SHALL support the aud parameter and MAY support a resource parameter as a synonym for aud.
"""
* resource       0..* "In the case of multiple audiences, this field is used."
* code_challenge 1..1 string "This parameter is generated by the app and used for the code challenge, as specified by PKCE. For example, when code_challenge_method is 'S256', this is the S256 hashed version of the code_verifier parameter. See considerations-for-pkce-support."
* code_challenge_method	1..1 string "Method used for the code_challenge parameter. Example value: S256. See considerations-for-pkce-support."

